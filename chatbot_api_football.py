# -*- coding: utf-8 -*-
"""Chatbot_API_Football.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P1eRKkMWfyyYl0xQP3CKQGEJGbFRr6u3
"""

#!pip install streamlit openai requests

import openai
import requests
import streamlit as st

# Configurez vos clés API
openai.api_key = st.secrets["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"]
API_FOOTBALL_KEY = st.secrets["fb8c8360dd79b9aba671f54ef096e1d0"]
API_FOOTBALL_URL = "https://v3.football.api-sports.io"

# Prompt initial pour OpenAI
INITIAL_PROMPT = """
Tu es un expert en football. Réponds aux questions sur les équipes, joueurs, championnats, et scores en temps réel.
"""

def get_live_scores():
    """Récupère les scores en direct via API-FOOTBALL."""
    headers = {
        "x-rapidapi-host": "v3.football.api-sports.io",
        "x-rapidapi-key": API_FOOTBALL_KEY
    }
    response = requests.get(f"{API_FOOTBALL_URL}/fixtures?live=all", headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        return {"error": "Impossible de récupérer les données en direct."}

def ask_openai(question):
    """Pose une question à l'API OpenAI."""
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": INITIAL_PROMPT},
                {"role": "user", "content": question}
            ]
        )
        return response['choices'][0]['message']['content']
    except Exception as e:
        return f"Erreur lors de l'appel à OpenAI : {str(e)}"

# Interface utilisateur Streamlit
st.title("Chatbot Football ⚽")
st.write("Posez des questions sur le football : joueurs, équipes, matchs ou scores en direct !")

question = st.text_input("Votre question :")

if question:
    if "score en direct" in question.lower() or "match en cours" in question.lower():
        st.write("Recherche des scores en direct...")
        live_scores = get_live_scores()
        if "error" in live_scores:
            st.error(live_scores["error"])
        else:
            if not live_scores.get("response"):
                st.write("Aucun match en cours actuellement.")
            else:
                st.write("Scores en direct :")
                for match in live_scores.get("response", []):
                    fixture = match["fixture"]
                    teams = match["teams"]
                    goals = match["goals"]
                    st.write(f"{teams['home']['name']} {goals['home']} - {goals['away']} {teams['away']['name']} ({fixture['date']})")
    else:
        st.write("Recherche de réponse via OpenAI...")
        answer = ask_openai(question)
        st.write(answer)